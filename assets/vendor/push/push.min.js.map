{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/classes/Messages.js","src/classes/Permission.js","src/classes/Push.js","src/classes/Util.js","src/classes/agents/AbstractAgent.js","src/classes/agents/DesktopAgent.js","src/classes/agents/MSAgent.js","src/classes/agents/MobileChromeAgent.js","src/classes/agents/MobileFirefoxAgent.js","src/classes/agents/WebKitAgent.js","src/index.js"],"names":["f","exports","module","define","amd","window","global","self","this","Push","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","default","errors","incompatible","invalid_plugin","invalid_title","permission_denied","sw_notification_error","sw_registration_error","unknown_interface","Permission","_win","DEFAULT","GRANTED","DENIED","_permissions","get","_this","Notification","requestPermission","then","catch","webkitNotifications","checkPermission","permission","navigator","mozNotification","external","msIsSiteMode","_currentId","_notifications","_Permission2","_agents","desktop","_DesktopAgent2","chrome","_MobileChromeAgent2","firefox","_MobileFirefoxAgent2","ms","_MSAgent2","webkit","_WebKitAgent2","_configuration","serviceWorker","fallback","_removeNotification","isSupported","close","_Messages2","hasOwnProperty","_closeNotification","timeout","setTimeout","_addNotification","addEventListener","JSON","parse","data","action","Number","isInteger","id","_this2","_prepareNotification","_this3","_Util2","isFunction","onClose","create","_o","config","_serviceWorkerCallback","title","_t","_n","onShow","onError","onClick","isString","has","_this4","_createCallback","request","Promise","tag","isObject","objectMerge","plugin","Util","toString","_typeof","AbstractAgent","DesktopAgent","_AbstractAgent","icon","isUndefined","x32","body","requireInteraction","MSAgent","msSiteModeClearIconOverlay","msSiteModeSetIconOverlay","x16","msSiteModeActivate","MobileChromeAgent","match","register","ready","link","origin","document","location","href","getFunctionBody","Object","assign","showNotification","vibrate","silent","getNotifications","active","postMessage","message","MobileFirefoxAgent","createNotification","show","WebKitAgent","cancel","_Push2","undefined"],"mappings":"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","file":"push.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","const errorPrefix = 'PushError:';\n\nexport default {\n  errors: {\n    incompatible: `${errorPrefix} Push.js is incompatible with browser.`,\n    invalid_plugin: `${errorPrefix} plugin class missing from plugin manifest (invalid plugin). Please check the documentation.`,\n    invalid_title: `${errorPrefix} title of notification must be a string`,\n    permission_denied: `${errorPrefix} permission request declined`,\n    sw_notification_error: `${errorPrefix} could not show a ServiceWorker notification due to the following reason: `,\n    sw_registration_error: `${errorPrefix} could not register the ServiceWorker due to the following reason: `,\n    unknown_interface: `${errorPrefix} unable to create notification: unknown interface`,\n  }\n}\n","export default class Permission {\n\n  constructor(win) {\n    this._win = win;\n    this.DEFAULT = 'default';\n    this.GRANTED = 'granted';\n    this.DENIED = 'denied';\n    this._permissions = [\n      this.GRANTED,\n      this.DEFAULT,\n      this.DENIED\n    ];\n  }\n\n  /**\n   * Requests permission for desktop notifications\n   * @param {Function} onGranted - Function to execute once permission is granted\n   * @param {Function} onDenied - Function to execute once permission is denied\n   * @return {void}\n   */\n  request(onGranted, onDenied) {\n    const existing = this.get();\n\n    var resolve = (result) => {\n      if (result === this.GRANTED || result === 0) {\n        if (onGranted) onGranted();\n      } else if (onDenied) onDenied();\n    }\n\n    /* Permissions already set */\n    if (existing !== this.DEFAULT) {\n      resolve(existing);\n    }\n    /* Safari 6+, Chrome 23+ */\n    else if (this._win.Notification && this._win.Notification.requestPermission) {\n      this._win.Notification.requestPermission().then(resolve).catch(function () {\n        if (onDenied) onDenied();\n      });\n    }\n    /* Legacy webkit browsers */\n    else if (this._win.webkitNotifications && this._win.webkitNotifications.checkPermission)\n      this._win.webkitNotifications.requestPermission(resolve);\n    /* Let the user continue by default */\n    else if (onGranted) onGranted();\n  }\n\n  /**\n   * Returns whether Push has been granted permission to run\n   * @return {Boolean}\n   */\n  has() {\n    return this.get() === this.GRANTED;\n  }\n\n  /**\n   * Gets the permission level\n   * @return {Permission} The permission level\n   */\n  get() {\n    let permission;\n\n    /* Safari 6+, Chrome 23+ */\n    if (this._win.Notification && this._win.Notification.permission)\n      permission = this._win.Notification.permission;\n\n    /* Legacy webkit browsers */\n    else if (this._win.webkitNotifications && this._win.webkitNotifications.checkPermission)\n      permission = this._permissions[this._win.webkitNotifications.checkPermission()];\n\n    /* Firefox Mobile */\n    else if (navigator.mozNotification)\n      permission = this.GRANTED;\n\n    /* IE9+ */\n    else if (this._win.external && this._win.external.msIsSiteMode)\n      permission = this._win.external.msIsSiteMode() ? this.GRANTED : this.DEFAULT;\n\n    else\n      permission = this.GRANTED;\n\n    return permission;\n  }\n}\n","import Messages from \"./Messages\";\nimport Permission from \"./Permission\";\nimport Util from \"./Util\";\n/* Import notification agents */\nimport DesktopAgent from \"./agents/DesktopAgent\";\nimport MobileChromeAgent from \"./agents/MobileChromeAgent\";\nimport MobileFirefoxAgent from \"./agents/MobileFirefoxAgent\";\nimport MSAgent from \"./agents/MSAgent\";\nimport WebKitAgent from \"./agents/WebKitAgent\";\n\nexport default class Push {\n\n  constructor(win) {\n    /* Private variables */\n\n    /* ID to use for new notifications */\n    this._currentId = 0;\n\n    /* Map of open notifications */\n    this._notifications = {};\n\n    /* Window object */\n    this._win = win;\n\n    /* Public variables */\n    this.Permission = new Permission(win);\n\n    /* Agents */\n    this._agents = {\n      desktop: new DesktopAgent(win),\n      chrome: new MobileChromeAgent(win),\n      firefox: new MobileFirefoxAgent(win),\n      ms: new MSAgent(win),\n      webkit: new WebKitAgent(win)\n    };\n\n    this._configuration = {\n      serviceWorker: '/serviceWorker.min.js',\n      fallback: function(payload) {}\n    }\n  }\n\n  /**\n   * Closes a notification\n   * @param {Notification} notification\n   * @return {Boolean} boolean denoting whether the operation was successful\n   * @private\n   */\n  _closeNotification(id) {\n    let success = true;\n    const notification = this._notifications[id];\n\n    if (notification !== undefined) {\n      success = this._removeNotification(id);\n\n      /* Safari 6+, Firefox 22+, Chrome 22+, Opera 25+ */\n      if (this._agents.desktop.isSupported())\n        this._agents.desktop.close(notification);\n\n      /* Legacy WebKit browsers */\n      else if (this._agents.webkit.isSupported())\n        this._agents.webkit.close(notification);\n\n      /* IE9 */\n      else if (this._agents.ms.isSupported())\n        this._agents.ms.close();\n\n      else {\n        success = false;\n        throw new Error(Messages.errors.unknown_interface);\n      }\n\n      return success;\n    }\n\n    return false;\n  }\n\n  /**\n   * Adds a notification to the global dictionary of notifications\n   * @param {Notification} notification\n   * @return {Integer} Dictionary key of the notification\n   * @private\n   */\n  _addNotification(notification) {\n    const id = this._currentId;\n    this._notifications[id] = notification;\n    this._currentId++;\n    return id;\n  }\n\n  /**\n   * Removes a notification with the given ID\n   * @param  {Integer} id - Dictionary key/ID of the notification to remove\n   * @return {Boolean} boolean denoting success\n   * @private\n   */\n  _removeNotification(id) {\n    let success = false;\n\n    if (this._notifications.hasOwnProperty(id)) {\n      /* We're successful if we omit the given ID from the new array */\n      delete this._notifications[id];\n      success = true;\n    }\n\n    return success;\n  }\n\n  /**\n   * Creates the wrapper for a given notification\n   *\n   * @param {Integer} id - Dictionary key/ID of the notification\n   * @param {Map} options - Options used to create the notification\n   * @returns {Map} wrapper hashmap object\n   * @private\n   */\n  _prepareNotification(id, options) {\n    let wrapper;\n\n    /* Wrapper used to get/close notification later on */\n    wrapper = {\n      get: () => {\n        return this._notifications[id];\n      },\n\n      close: () => {\n        this._closeNotification(id);\n      }\n    };\n\n    /* Autoclose timeout */\n    if (options.timeout) {\n      setTimeout(() => {\n        wrapper.close();\n      }, options.timeout);\n    }\n\n    return wrapper;\n  }\n\n  /**\n   * Find the most recent notification from a ServiceWorker and add it to the global array\n   * @param notifications\n   * @private\n   */\n  _serviceWorkerCallback(notifications, options, resolve) {\n    let id = this._addNotification(notifications[notifications.length - 1]);\n\n    /* Listen for close requests from the ServiceWorker */\n    navigator.serviceWorker.addEventListener('message', event => {\n      const data = JSON.parse(event.data);\n\n      if (data.action === 'close' && Number.isInteger(data.id))\n        this._removeNotification(data.id);\n    });\n\n    resolve(this._prepareNotification(id, options));\n  }\n\n  /**\n   * Callback function for the 'create' method\n   * @return {void}\n   * @private\n   */\n  _createCallback(title, options, resolve) {\n    let notification = null;\n    let onClose;\n\n    /* Set empty settings if none are specified */\n    options = options || {};\n\n    /* onClose event handler */\n    onClose = (id) => {\n      /* A bit redundant, but covers the cases when close() isn't explicitly called */\n      this._removeNotification(id);\n      if (Util.isFunction(options.onClose)) {\n        options.onClose.call(this, notification);\n      }\n    };\n\n    /* Safari 6+, Firefox 22+, Chrome 22+, Opera 25+ */\n    if (this._agents.desktop.isSupported()) {\n      try {\n        /* Create a notification using the API if possible */\n        notification = this._agents.desktop.create(title, options);\n      } catch (e) {\n        const id = this._currentId;\n        const sw = this.config().serviceWorker;\n        const cb = (notifications) => this._serviceWorkerCallback(notifications, options, resolve);\n        /* Create a Chrome ServiceWorker notification if it isn't supported */\n        if (this._agents.chrome.isSupported()) {\n          this._agents.chrome.create(id, title, options, sw, cb);\n        }\n      }\n      /* Legacy WebKit browsers */\n    } else if (this._agents.webkit.isSupported())\n      notification = this._agents.webkit.create(title, options);\n\n    /* Firefox Mobile */\n    else if (this._agents.firefox.isSupported())\n      this._agents.firefox.create(title, options);\n\n    /* IE9 */\n    else if (this._agents.ms.isSupported())\n      notification = this._agents.ms.create(title, options);\n\n    /* Default fallback */\n    else {\n      options.title = title;\n      this.config().fallback(options);\n    }\n\n    if (notification !== null) {\n      const id = this._addNotification(notification);\n      const wrapper = this._prepareNotification(id, options);\n\n      /* Notification callbacks */\n      if (Util.isFunction(options.onShow))\n        notification.addEventListener('show', options.onShow);\n\n      if (Util.isFunction(options.onError))\n        notification.addEventListener('error', options.onError);\n\n      if (Util.isFunction(options.onClick))\n        notification.addEventListener('click', options.onClick);\n\n      notification.addEventListener('close', () => {\n        onClose(id);\n      });\n\n      notification.addEventListener('cancel', () => {\n        onClose(id);\n      });\n\n      /* Return the wrapper so the user can call close() */\n      resolve(wrapper);\n    }\n\n    /* By default, pass an empty wrapper */\n    resolve(null);\n  }\n\n  /**\n   * Creates and displays a new notification\n   * @param {Array} options\n   * @return {Promise}\n   */\n  create(title, options) {\n    let promiseCallback;\n\n    /* Fail if no or an invalid title is provided */\n    if (!Util.isString(title)) {\n      throw new Error(Messages.errors.invalid_title);\n    }\n\n    /* Request permission if it isn't granted */\n    if (!this.Permission.has()) {\n      promiseCallback = (resolve, reject) => {\n        this.Permission.request(() => {\n          try {\n            this._createCallback(title, options, resolve);\n          } catch (e) {\n            reject(e);\n          }\n        }, () => {\n          reject(Messages.errors.permission_denied);\n        });\n      };\n    } else {\n      promiseCallback = (resolve, reject) => {\n        try {\n          this._createCallback(title, options, resolve);\n        } catch (e) {\n          reject(e);\n        }\n      };\n    }\n\n    return new Promise(promiseCallback);\n  }\n\n  /**\n   * Returns the notification count\n   * @return {Integer} The notification count\n   */\n  count() {\n    let count = 0;\n    let key;\n\n    for (key in this._notifications)\n      if (this._notifications.hasOwnProperty(key)) count++;\n\n    return count;\n  }\n\n  /**\n   * Closes a notification with the given tag\n   * @param {String} tag - Tag of the notification to close\n   * @return {Boolean} boolean denoting success\n   */\n  close(tag) {\n    let key, notification;\n\n    for (key in this._notifications) {\n      if (this._notifications.hasOwnProperty(key)) {\n        notification = this._notifications[key];\n\n        /* Run only if the tags match */\n        if (notification.tag === tag) {\n\n          /* Call the notification's close() method */\n          return this._closeNotification(key);\n        }\n      }\n    }\n  }\n\n  /**\n   * Clears all notifications\n   * @return {Boolean} boolean denoting whether the clear was successful in closing all notifications\n   */\n  clear() {\n    let key, success = true;\n\n    for (key in this._notifications)\n      if (this._notifications.hasOwnProperty(key))\n        success = success && this._closeNotification(key);\n\n    return success;\n  }\n\n  /**\n   * Denotes whether Push is supported in the current browser\n   * @returns {boolean}\n   */\n  supported() {\n    let supported = false;\n\n    for (var agent in this._agents)\n      if (this._agents.hasOwnProperty(agent))\n        supported = supported || this._agents[agent].isSupported()\n\n    return supported;\n  }\n\n  /**\n   * Modifies settings or returns all settings if no parameter passed\n   * @param settings\n   */\n  config(settings) {\n    if (typeof settings !== 'undefined' || settings !== null && Util.isObject(settings))\n      Util.objectMerge(this._configuration, settings);\n    return this._configuration;\n  }\n\n  /**\n   * Copies the functions from a plugin to the main library\n   * @param plugin\n   */\n  extend(manifest) {\n    var plugin, Plugin,\n      hasProp = {}.hasOwnProperty;\n\n    if (!hasProp.call(manifest, 'plugin')) {\n      throw new Error(Messages.errors.invalid_plugin);\n    } else {\n      if (hasProp.call(manifest, 'config') && Util.isObject(manifest.config) && manifest.config !== null) {\n        this.config(manifest.config);\n      }\n\n      Plugin = manifest.plugin;\n      plugin = new Plugin(this.config())\n\n      for (var member in plugin) {\n        if (hasProp.call(plugin, member) && Util.isFunction(plugin[member]))\n          this[member] = plugin[member];\n      }\n    }\n  }\n}\n","export default class Util {\n  static isUndefined(obj) {\n    return obj === undefined;\n  }\n\n  static isString(obj) {\n    return typeof obj === 'string';\n  }\n\n  static isFunction(obj) {\n    return obj && {}.toString.call(obj) === '[object Function]';\n  }\n\n  static isObject(obj) {\n    return typeof obj === 'object'\n  }\n\n  static objectMerge(target, source) {\n    for (var key in source) {\n      if (target.hasOwnProperty(key) && this.isObject(target[key]) && this.isObject(source[key])) {\n        this.objectMerge(target[key], source[key]);\n      } else {\n        target[key] = source[key]\n      }\n    }\n  }\n}\n","export default class AbstractAgent {\n  constructor(win) {\n    this._win = win;\n  }\n}\n","import AbstractAgent from './AbstractAgent';\nimport Util from '../Util';\n\n/**\n * Notification agent for modern desktop browsers:\n * Safari 6+, Firefox 22+, Chrome 22+, Opera 25+\n */\nexport default class DesktopAgent extends AbstractAgent {\n\n  /**\n   * Returns a boolean denoting support\n   * @returns {Boolean} boolean denoting whether webkit notifications are supported\n   */\n  isSupported() {\n    return this._win.Notification !== undefined;\n  }\n\n  /**\n   * Creates a new notification\n   * @param title - notification title\n   * @param options - notification options array\n   * @returns {Notification}\n   */\n  create(title, options) {\n    return new this._win.Notification(\n      title,\n      {\n        icon: (Util.isString(options.icon) || Util.isUndefined(options.icon)) ? options.icon : options.icon.x32,\n        body: options.body,\n        tag: options.tag,\n        requireInteraction: options.requireInteraction\n      }\n    );\n  }\n\n  /**\n   * Close a given notification\n   * @param notification - notification to close\n   */\n  close(notification) {\n    notification.close();\n  }\n}\n","import AbstractAgent from './AbstractAgent';\nimport Util from '../Util';\n\n/**\n * Notification agent for IE9\n */\nexport default class MSAgent extends AbstractAgent {\n\n  /**\n   * Returns a boolean denoting support\n   * @returns {Boolean} boolean denoting whether webkit notifications are supported\n   */\n  isSupported() {\n    return (this._win.external !== undefined) && (this._win.external.msIsSiteMode !== undefined);\n  }\n\n  /**\n   * Creates a new notification\n   * @param title - notification title\n   * @param options - notification options array\n   * @returns {Notification}\n   */\n  create(title, options) {\n    /* Clear any previous notifications */\n    this._win.external.msSiteModeClearIconOverlay();\n\n    this._win.external.msSiteModeSetIconOverlay(\n      ((Util.isString(options.icon) || Util.isUndefined(options.icon))\n        ? options.icon\n        : options.icon.x16), title\n    );\n\n    this._win.external.msSiteModeActivate();\n\n    return null;\n  }\n\n  /**\n   * Close a given notification\n   * @param notification - notification to close\n   */\n  close() {\n    this._win.external.msSiteModeClearIconOverlay()\n  }\n}\n","import AbstractAgent from './AbstractAgent';\nimport Util from '../Util';\nimport Messages from '../Messages';\n\n/**\n * Notification agent for modern desktop browsers:\n * Safari 6+, Firefox 22+, Chrome 22+, Opera 25+\n */\nexport default class MobileChromeAgent extends AbstractAgent {\n\n  /**\n   * Returns a boolean denoting support\n   * @returns {Boolean} boolean denoting whether webkit notifications are supported\n   */\n  isSupported() {\n    return this._win.navigator !== undefined &&\n      this._win.navigator.serviceWorker !== undefined;\n  }\n\n  /**\n   * Returns the function body as a string\n   * @param func\n   */\n  getFunctionBody(func) {\n    return func.toString().match(/function[^{]+{([\\s\\S]*)}$/)[1];\n  }\n\n  /**\n   * Creates a new notification\n   * @param title - notification title\n   * @param options - notification options array\n   * @returns {Notification}\n   */\n  create(id, title, options, serviceWorker, callback) {\n    /* Register ServiceWorker */\n    this._win.navigator.serviceWorker.register(serviceWorker);\n\n    this._win.navigator.serviceWorker.ready.then(registration => {\n      /* Local data the service worker will use */\n      let localData = {\n        id: id,\n        link: options.link,\n        origin: document.location.href,\n        onClick: (Util.isFunction(options.onClick)) ? this.getFunctionBody(options.onClick) : '',\n        onClose: (Util.isFunction(options.onClose)) ? this.getFunctionBody(options.onClose) : ''\n      };\n\n      /* Merge the local data with user-provided data */\n      if (options.data !== undefined && options.data !== null)\n        localData = Object.assign(localData, options.data);\n\n      /* Show the notification */\n      registration.showNotification(\n        title,\n        {\n          icon: options.icon,\n          body: options.body,\n          vibrate: options.vibrate,\n          tag: options.tag,\n          data: localData,\n          requireInteraction: options.requireInteraction,\n          silent: options.silent\n        }\n      ).then(() => {\n\n        registration.getNotifications().then(notifications => {\n          /* Send an empty message so the ServiceWorker knows who the client is */\n          registration.active.postMessage('');\n\n          /* Trigger callback */\n          callback(notifications);\n        });\n      }).catch(function(error) {\n        throw new Error(Messages.errors.sw_notification_error + error.message);\n      });\n    }).catch(function(error) {\n      throw new Error(Messages.errors.sw_registration_error + error.message);\n    });\n  }\n\n  /**\n   * Close all notification\n   */\n  close() {\n    // Can't do this with service workers\n  }\n}\n","import AbstractAgent from './AbstractAgent';\n\n/**\n * Notification agent for modern desktop browsers:\n * Safari 6+, Firefox 22+, Chrome 22+, Opera 25+\n */\nexport default class MobileFirefoxAgent extends AbstractAgent {\n\n  /**\n   * Returns a boolean denoting support\n   * @returns {Boolean} boolean denoting whether webkit notifications are supported\n   */\n  isSupported() {\n    return this._win.navigator.mozNotification !== undefined;\n  }\n\n  /**\n   * Creates a new notification\n   * @param title - notification title\n   * @param options - notification options array\n   * @returns {Notification}\n   */\n  create(title, options) {\n    let notification = this._win.navigator.mozNotification.createNotification(\n      title,\n      options.body,\n      options.icon\n    );\n\n    notification.show();\n\n    return notification;\n  }\n}\n","import AbstractAgent from './AbstractAgent';\n\n/**\n * Notification agent for old Chrome versions (and some) Firefox\n */\nexport default class WebKitAgent extends AbstractAgent {\n\n  /**\n   * Returns a boolean denoting support\n   * @returns {Boolean} boolean denoting whether webkit notifications are supported\n   */\n  isSupported() {\n    return this._win.webkitNotifications !== undefined;\n  }\n\n  /**\n   * Creates a new notification\n   * @param title - notification title\n   * @param options - notification options array\n   * @returns {Notification}\n   */\n  create(title, options) {\n    let notification = this._win.webkitNotifications.createNotification(\n      options.icon,\n      title,\n      options.body\n    );\n\n    notification.show();\n\n    return notification;\n  }\n\n  /**\n   * Close a given notification\n   * @param notification - notification to close\n   */\n  close(notification) {\n    notification.cancel();\n  }\n}\n","import Push from './classes/Push';\n\nmodule.exports = new Push(typeof window !== 'undefined' ? window : this);\n"]}